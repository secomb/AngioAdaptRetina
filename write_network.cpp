/************************************************************************
write_network - for AngioAdapt07
JPA April 08
Pressures in mmHg, flows in um^3/s, viscosity in cP
writes a network.dat file that can be re-input into AngioAdapt to continue a run.
************************************************************************/
#define _CRT_SECURE_NO_DEPRECATE

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include "nrutil.h"

void write_network(int imain)
{
	extern int nseg, nnod, nnodbc, nodsegm, mxx, myy, mzz, nsp, seed, dogreensflag;
	extern int* segname, * segtyp, * nodtyp, * nodname, * bcnodname, * bctyp, * permsolute;
	extern int** segnodname;
	extern float alx, aly, alz, lb, maxl, time1;
	extern float** bcp, ** cnode;
	extern float* diam, * q, * hd, * bcprfl, * bchd;

	int i, isp, iseg, inodbc, deadsegs = 0, zeronodes = 0, numseg, numnod;
	char netfile1[80];
	FILE* ofp;

	if (imain >= 0) sprintf(netfile1, "Current\\Network%03i.dat", imain);
	else strcpy(netfile1, "Networklast.dat");

	for (iseg = 1; iseg <= nseg; iseg++) if (segtyp[iseg] == 10) deadsegs++;
	for (i = 1; i <= nnod; i++) if (nodtyp[i] == 0) zeronodes++;
	numseg = nseg - deadsegs;
	numnod = nnod - zeronodes;

	ofp = fopen(netfile1, "w");
	fprintf(ofp, "%i %i %f Current network file generated by angioadapt\n", seed, imain, time1);
	fprintf(ofp, "  %f  %f  %f\tbox dimensions in microns\n", alx, aly, alz);
	fprintf(ofp, "  %i    %i    %i \tnumber of tissue points in x,y,z directions\n", mxx, myy, mzz);
	fprintf(ofp, "  %f\t\t\touter bound distance (100. in test case)\n", lb);
	fprintf(ofp, "  %f\t\t\t\tmax. segment length.  (5. in test case)\n", maxl);
	fprintf(ofp, "   %i\t\t\t\tnodsegm, max. number of segments per node\n", nodsegm);
	//number of segments in vessel network
	if (dogreensflag) fprintf(ofp, "  %i\t\t\t\ttotal number of segments \n", numseg);
	else fprintf(ofp, "  %i\t\t\t\ttotal number of segments \n", nseg);
	fprintf(ofp, "  name type from  to  diam       flow\n");
	//segment properties: name type nodnamefrom nodnameto diameter flow hematocrit
	for (iseg = 1; iseg <= nseg; iseg++) {
		if (dogreensflag) {
			if (segtyp[iseg] != 10) fprintf(ofp, "\t%i\t  %i\t  %i\t  %i\t  %f\t  %f\t  %f  \n",
				segname[iseg], segtyp[iseg], segnodname[1][iseg], segnodname[2][iseg], diam[iseg], q[iseg], hd[iseg]);
		}
		else fprintf(ofp, "\t%i\t  %i\t  %i\t  %i\t  %f\t  %f\t  %f  \n",
			segname[iseg], segtyp[iseg], segnodname[1][iseg], segnodname[2][iseg], diam[iseg], q[iseg], hd[iseg]);
	}
	//number of nodes in vessel network
	if (dogreensflag) fprintf(ofp, " %i       total number of nodes\n", numnod);
	else fprintf(ofp, " %i       total number of nodes\n", nnod);
	fprintf(ofp, "  name    x       y       z\n");
	//coordinates of nodes
	for (i = 1; i <= nnod; i++) {
		if (dogreensflag) {
			if (nodtyp[i] != 0) fprintf(ofp, "\t%i\t  %f\t  %f\t  %f  \n", nodname[i], cnode[1][i], cnode[2][i], cnode[3][i]);
		}
		else fprintf(ofp, "\t%i\t  %f\t  %f\t  %f  \n", nodname[i], cnode[1][i], cnode[2][i], cnode[3][i]);
	}
	//boundary nodes
	fprintf(ofp, "   %i  total number of boundary nodes\n", nnodbc);
	fprintf(ofp, "node bctyp press/flow   HD    PO2\n");
	for (inodbc = 1; inodbc <= nnodbc; inodbc++) {
		fprintf(ofp, "\t%i\t  %i\t  %f\t  %f\t  ", bcnodname[inodbc], bctyp[inodbc], bcprfl[inodbc], bchd[inodbc]);
		for (isp = 1; isp <= nsp; isp++) if (permsolute[isp] == 1) fprintf(ofp, "%f\n", bcp[inodbc][isp]);
	}
	fprintf(ofp, "\n");
	fclose(ofp);
	return;
}